Create DOMAIN DM_ID_COD AS INTEGER NOT NULL UNIQUE;
CREATE DOMAIN DM_NAME AS VARCHAR(180) NOT NULL;
CREATE DOMAIN DM_PRECO AS DECIMAL(12,2) NOT NULL;
CREATE DOMAIN DM_QTD AS INTEGER NOT NULL;
commit;


CREATE TABLE TAB_TIPOS_PAGAMENTOS(
        id_tipo_pagamento DM_ID_COD Primary Key,
        nome_tipo_pagamento DM_NAME
); COMMIT;


CREATE TABLE TAB_STATUS_PAGAMENTOS(
        id_status_pagamento DM_ID_COD Primary Key,
        nome_status_pagamento DM_NAME
); COMMIT;


CREATE TABLE TAB_PRODUTOS(
        id_produto DM_ID_COD Primary Key,
        nome_produto DM_NAME,
        preco_produto DM_PRECO,
        qtd_produto DM_QTD
); commit;


CREATE TABLE tab_pedidos (
    id_pedido DM_ID_COD PRIMARY KEY,
    id_cliente DM_ID_COD,
    id_tipo_pagamento DM_ID_COD,
    id_status_pagamento DM_ID_COD,
    qtd_produtos_pedido DM_QTD,
    total_valor_pedido DM_PRECO,
    FOREIGN KEY (id_cliente) REFERENCES tab_clientes (id_cliente),
    FOREIGN KEY (id_tipo_pagamento) REFERENCES TAB_TIPOS_PAGAMENTOS (id_tipo_pagamento),
    FOREIGN KEY (id_status_pagamento) REFERENCES TAB_STATUS_PAGAMENTOS (id_status_pagamento)
); commit;



CREATE TABLE TAB_ITENS_PEDIDO (
    id_item DM_ID_COD PRIMARY KEY,
    id_produto DM_ID_COD,
    id_pedido DM_ID_COD,
    qtd_itens_pedido DM_QTD,
    unit_valor_pedido DM_PRECO,
    total_valor_pedido DM_PRECO,
    FOREIGN KEY (id_produto) REFERENCES tab_produtos(id_produto),
    FOREIGN KEY (id_pedido) REFERENCES tab_pedidos(id_pedido) -- Corrigido para 'tab_pedidos' (plural)
); commit;


CREATE GENERATOR GEN_CLIENTE_ID;
SET GENERATOR GEN_CLIENTE_ID TO 3;

SET TERM ^ ; 
CREATE TRIGGER CLIENTE_BI FOR TAB_CLIENTES 
ACTIVE BEFORE INSERT POSITION 0 
AS 
begin 
        NEW.ID_CLIENTE = GEN_ID(GEN_CLIENTE_ID, 1); 
end^ 
SET TERM ; ^

CREATE GENERATOR GEN_PRODUTO_ID;
SET GENERATOR GEN_PRODUTO_ID TO 0;

SET TERM ^;
CREATE TRIGGER PRODUTO_BI FOR TAB_PRODUTOS
ACTIVE BEFORE INSERT POSITION 0
AS 
begin   
        NEW.ID_PRODUTO = GEN_ID(GEN_CLIENTE_ID, 1);
end^
SET TERM ; ^

CREATE GENERATOR GEN_PEDIDO_ID;
SET GENERATOR GEN_PEDIDO_ID TO 0;

SET TERM ^;
CREATE TRIGGER PEDIDO_BI FOR tab_pedidos
ACTIVE BEFORE INSERT POSITION 0
AS
begin
        NEW.ID_PEDIDO = GEN_ID(GEN_PEDIDO_ID, 1);
end ^
SET TERM ; ^

CREATE GENERATOR GEN_STATUS_PAGAMENTO;
SET GENERATOR GEN_STATUS_PAGAMENTO TO 0;

SET TERM ^ ;
CREATE TRIGGER SPAGTO_BI FOR TAB_STATUS_PAGAMENTOS
ACTIVE BEFORE INSERT POSITION 0
AS 
begin
        NEW.id_status_pagamento = GEN_ID(GEN_STATUS_PAGAMENTO, 1);
END ^
SET TERM ; ^


CREATE GENERATOR GEN_TIPO_PAGAMENTO;
SET GENERATOR GEN_TIPO_PAGAMENTO TO 0;

SET TERM ^ ;
CREATE TRIGGER TPAGTO_BI FOR TAB_TIPOS_PAGAMENTOS
ACTIVE BEFORE INSERT POSITION 0
AS 
begin
        NEW.id_tipo_pagamento = GEN_ID(GEN_TIPO_PAGAMENTO, 1);
END ^
SET TERM ; ^

CREATE GENERATOR GEN_ITEM_ID;
SET GENERATOR GEN_ITEM_ID TO 0;

SET TERM ^;
CREATE TRIGGER ITEM_BI FOR TAB_ITENS_PEDIDO
ACTIVE BEFORE INSERT POSITION 0
AS 
begin
        NEW.ID_ITEM = GEN_ID(GEN_ITEM_ID, 1);
end^
SET TERM ; ^